// function n.1 with for
function iterateandlogWithfor(n){
    var msg=""
    for(var i=0;i<n;i++){
        if(i%2===0){
            console.log(msg=i+" is even")
        }
        else{
            console.log(msg=i+" is odd")
        }
    }
}
// function n.1 with while
function iterateandlogWithwhile(n){
    var msg=""
    var i=0
    while(i<n){
        if(i%2===0){
            console.log(msg=i+" is even")
            i++
        }
        else{
            console.log(msg=i+" is odd")
            i++
        }
    }
}
// function n.2 with for 
function reverseIterateAndLogwithfor(n){
    var msg=""
    for(var i=0;i;n--){
        if(n%2===0){
            msg=msg +i+" is even"
            console.log(msg)
        }
        else{
            msg=msg + i+" is odd"
            console.log(msg)
        }
    }
    return msg
}
//function n.2 with while
function reverseIterateAndLogwithwhile(n){
    var msg=""
    var i=n-1
    while(i<n){
        if(n%2===0){
            msg=i+" is even"
            console.log(msg)
            i++;
        }
        else{
            msg=i+" is odd"
            console.log(msg)
            i++;
        }
    }
    return msg
}
//function divide
function weirdDivisionWithFor(n) {
    var result=""
    for (var i = 0; i <=n; i++) {
        if (n%3===0){
            return result="julia"
        }
        else if (n%5===0){
            return result="james"
        }
        else if(n%3===0 && n%5===0){
            return result="juliajames"
        }
        else if(n%3!==0 || n%5!==0){
            return result=n
        }
    }
    return result
    }

//function n.4 with for 
function laugh(number){
    var string=""
    for(var i=0;i<number;i++){ 
        string=string +"ha"
    }
    return string
}
// function laugh with while
function laugh(number){
    var string=""
    var i=0
    while(i<number){
        string=string +"ha"
        i++;
    }
    return string
}
// function laugh with recursion
function laugh(n){
    var str=""
    if(n>0){
        return str=str+"ha"
    }
    return str+ laugh(n-1)
}
